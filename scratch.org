#+TITLE: Scratch Buffer
#+PROPERTY: header-args :results output

#+begin_src scheme
(define (fib n)
  (define (fib-iter a b count)
    (if (= count 0)
        b
        (fib-iter (+ a b) a (- count 1))))
  (fib-iter 1 0 n))


(assert-equal 5 (fib 5))
#+end_src

#+RESULTS:

#+begin_src scheme
(define (count-change amount)
    (cc amount 5))
  (define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)
        ((or (< amount 0)
             (= kinds-of-coins 0))
         0)
        (else
         (+ (cc amount (- kinds-of-coins 1))
            (cc (- amount (first-denomination
                           kinds-of-coins))
                kinds-of-coins)))))

(define (first-denomination kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
        ((= kinds-of-coins 2) 5)
        ((= kinds-of-coins 3) 10)
        ((= kinds-of-coins 4) 25)
        ((= kinds-of-coins 5) 50)))

(assert-equal 292 (count-change 100))
#+end_src

#+RESULTS:

# Local Variables:
# eval: (olivetti-mode 1)
# End:
